Como usar Git.

Primero que todo instalar Git https://git-scm.com/download/win para su instalacion es darle si a todo :3
un vez instalado, abren en la carpeta de htdocs del xampp y como si quisieran crear una nueva carpeta
hacen click derecho, y hacen click en la opcion Git Bash here y siguen los siguientes pasos:

1.-Para Comensar a usar git necesitan usar unos comandos antes (todos estos en Git bash que abrieron)

Primero revisar si esta instalado correctamente git

    git --version

Segundo Registrar su nombre y email

    git config --global user.name "tu nombre"

    git config ---global user.email tu_correo@papacaliente.com

Tercero si usar Visual Studio code lo configuras

    git config --global core.editos "code --wait"

Cuarto Prueba si esta bien configurado Vs code

    git config --global -e
    *si abre por si solo el Vs code entonces ya quedo, cierralo*

Quinto configurar saltos de linea

    git config --global core.autocrlf true

2.-Ya hecha la configuaracion inicial ahora podemos seguir con la descarga del proyecto

Primero Descargar el proyecto de Github

    git clone https://github.com/Sulfirio/Proyecto_Reportes_ADS "nombre de carpera a gusto"

    **Pueden nombrar la carpeta como gusten no afectara en nada en la realizacion del proyecto**

Segundo con lo anteriror se abra creado una carpeta con el nombre que escogieron e tendrea ya la ultima
version del proyecto

*********************************************************************************************************************************************************************
ANTES DE HACER LOS SIGUINTES PASOS EN GIT BASH DEBES DE PONER EL SIGUINETE COMANDO en Git Bash

cd "Nombre de carpeta a gusto"/

*Si en el Git Bash aparece (master) al final de esta linea Sulfirio@DESKTOP-ON1TDK4 MINGW64 /c/xampp/htdocs/Proyecto_ADS (master)....Ustedes pueden segir los 
siguientes pasos :3 el inicio de la linea puede variar al igual que la direccion pero lo que debe de aparecir es (master) si es asi muy bien!
*********************************************************************************************************************************************************************


**NOTA ANTES DE EMPEZAR A MANDAR COSAS A LO MALDITO**

Les pido por favor cuando empiezen a trabajar que:

PRIMERO: usen el comando de PULL para acualizar la info que tienen del proyecto

SEGUNDO: creen una Branch (rama en español) la cual servira para que trabajen en una copia alterna del proyecto y que la rama principal solo 
tenga lo necesario y lo que funciona (en su Branch pueden enviar codigo que no funcione al cien si es que lo necesitan), en esta rama tienen
que siguir casi todos los comando de "COMANDOS DEL DIA A DIA PARA USAR GIT" solo no vas a usar el comando "push" aun

    para crear una branch sigue los siguentes comandos:

    crear branch
        1.- git branch nombre_de_tu_branch

    entrar en tu branch

        2.- git checkout nombre_de_tu_branch

    Comprueba que ya estas dentro de tu branch
    *Si puedes leer esta linea en tu git bash felicidades ya estas en tu branch!!

        3.-Sulfirio@DESKTOP-ON1TDK4 MINGW64 /c/xampp/htdocs/Proyecto_ADS (nombre_de_tu_branch)

    *cuando entres puedes empezar a modificar/crear/eliminar elementos del proyecto, recuerda seguir los comandos de la 
    seccion "COMANDOS DEL DIA A DIA PARA USAR GIT" Y USA EL CAMANDO PULL >:v

TERCERO: Cuando termines de hacer tus tareas y quiereas mandar tu trabajo
    
    1.-Ya hiciste uso de los comando pull,status,add y ya mandaste tu commit (en ese orden por favor) ahora tienes que regresar a la rama 
    master para esto se usa:

        git checkout master
    
    *Puedes comprobar que ya estas en la rama master si en git bash puedes ver la siguinte linea
        Sulfirio@DESKTOP-ON1TDK4 MINGW64 /c/xampp/htdocs/Proyecto_ADS (master)

    2.-ahora necesitas volver a usar el comando pull (otra vez) listo? bien puede usar el comando:

        git rebase nombre_de_tu_branch

    3.-Para madar tus modificaciones ahora si puede hacer uso de push (ESTANDO EN LA RAMA master)

        git push origin master

NOTA: los comandos antes mencionados y que no se vea como se usan en tan en la siguiente seccion!


*********************************************************************************************************************************************

COMANDOS DEL DIA A DIA PARA USAR GIT 

*Cada vez que INICIEN A TRABAJAR y queiran ver el nuevo progreso del proyecto o CUANDO QUIERAN
ENVIAR SU PROGRESO por favor USAR ESTE COMANDO ANTES!

Descargar/actualizar el proyecto 

    git pull origin master 

Ver el estado de tu carpeta del proyecto

*Este comando nos permite ver que archivos esta siguendo Git (esto hace referencia el listado de archivos que Git esta monitoriando y avisa si 
sufrieron alguna modificacion, fueron creados y eliminados) 

    git status

    °si el estatus aparece en rojo queire decir que fue modificado o en su caso fue creado pero git no lo rastrea alguna°
    °si aparece en verde todo esta bien.

Añadir/Guardar Cambios en elementos a stage (ESTE ES UN COMANDO OBLIGATORIA ANTES DE ENVIAR TUS AVANCES/PROGESO)

*En Git para poder enviar tus modificaciones o implentaciones al proyecto final primero debes de mandarlos a Stage, donde en primer instancia
se almacenaran los elementos y donde tambien se registrara las modificaciones a estos

    git add "nombre del archivo + su extencion por ejemplo codigo.c"
    °esto lo añadira al Stage y Git estara monitoriando ese archivo.
    °cada vez que se modifique el archivo y ya lo quieras aguardar necesitas usar este comando°

Comprometer tus AVANCES

*Con comprometer nos referimos que los cambios hechos funcionan bien (POR FAVOR SOLO ENVIAR CODIGO QUE FUNCIONE XD) por lo que al igual que el 
anteriror comando es   NECESARIO PARA ENVIAR TU AVANCE y en este necetitas poner una descripcion corta de que modifcaion histe y en que archivo
lo hiciste

    git commit -m "Tu descripcion"

Enviar tu Progreso (por fin xD)

*con este comando por fin enviaras tu progreso y todos lo podremos ver pero si falla algo ya mam.... na pero procura USAR EL COMANDO DE PULL 
ANTES DE USAR ESTE COMANDO POR QUE SI NO TE MARCARA UN ERROR

    git push origin master


Cuando ejecutes este comando te pedira que te logees en Github o uses un token ya genere un token para cada uno solo enviame un mensaje
directo en whatsapp (asi me dare cuenta quien leyo todo esto u.u)